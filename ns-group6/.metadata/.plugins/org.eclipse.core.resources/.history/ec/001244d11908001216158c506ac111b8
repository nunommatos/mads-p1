import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;
class Game
{
	static int diamond = 0;
	static ArrayList<ArrayList<String>> map= new ArrayList<ArrayList<String>>();
	static int robotx;
	static int roboty;
	static int exitx;
	static int exity;
	static boolean endgame = false;
	
	public String getMap() {
		return map.toString();
	}

	public int getDiamond() {
		return diamond;
	}

	public static void setDiamond(int diamond) {
		Game.diamond = diamond;
	}

	public static void main(String[] args){
		FileRead();
		menu();
	}
   
	public static void FileRead()
	{
      try{
		// Open the file that is the first 
		// command line parameter
		FileInputStream fstream = new FileInputStream("example1.map");
		// Get the object of DataInputStream
		DataInputStream in = new DataInputStream(fstream);
        BufferedReader br = new BufferedReader(new InputStreamReader(in));
		String strLine;
		//Read File Line By Line
		while ((strLine = br.readLine()) != null) 	{
			// Print the content on the console
			ArrayList<String> temp = new ArrayList<String>();
			for(int a=0; a < strLine.length();a++){
				temp.add(Character.toString(strLine.charAt(a)));
				if(strLine.charAt(a) == 'x'){
					diamond++;
				}
				if(strLine.charAt(a) == 'R'){
					robotx = a;
					roboty = map.size();
				}
				if(strLine.charAt(a) == 'L'){
					exitx = a;
					exity = map.size();
				}
			}
			map.add(temp);
			System.out.println (map);
			System.out.println ("diamond:"+diamond);
			System.out.println ("Robot:"+robotx+""+roboty);
		}
		//Close the input stream
		in.close();
		}catch (Exception e){//Catch exception if any
			System.err.println("Error: " + e.getMessage());
		}
	}
	
	public static void move(int x, int y){
		if(x<0 || y<0 || x>map.get(0).size() || y>map.size()){
			System.out.println("noup");
		}
		else{
			if(map.get(y).get(x).equals("x")){
				diamond--;
				map.get(roboty).set(robotx, " ");
				map.get(y).set(x, "R");
				robotx=x;
				roboty=y;
			}
			else if(map.get(y).get(x).equals(" ") || map.get(y).get(x).equals(".")){
				map.get(roboty).set(robotx, " ");
				map.get(y).set(x, "R");
				robotx=x;
				roboty=y;
			}
			else if(map.get(y).get(x).equals("O")){
				map.get(roboty).set(robotx, " ");
				map.get(y).set(x, "R");
				endgame=true;
				robotx=x;
				roboty=y;
			}
			else if(map.get(y).get(x).equals("*") && roboty==y){
				if(robotx>x && map.get(y).get(x-1).equals(" ")){
					map.get(y).set(x-1,"*");
					map.get(y).set(x,"R");
					map.get(y).set(robotx," ");
				}
				else if(robotx<x && map.get(y).get(x+1).equals(" ")){
					
				}
			}
			
			if(diamond == 0){
				map.get(exity).set(exitx, "O");
			}
			
			System.out.println(map);
		}
		
	}
	
	public static void menu() {
		Scanner in = new Scanner(System.in);
		// print menu

		System.out.println("L. Move Left:");
		System.out.println("R. Move Right:");
		System.out.println("U. Move Up:");
		System.out.println("D. Move Down:");
		System.out.println("W. Wait:");

		// handle user commands
		String menuItem;
		do {
			System.out.print("Option: ");
			menuItem = in.next().toUpperCase();
			switch (menuItem) {
			case "L":
				// nome da funcao
				move(robotx-1,roboty);
				break;
			case "R":
				// nome da funcao
				move(robotx+1,roboty);
				break;
			case "U":
				// nome da funcao
				move(robotx,roboty-1);
				break;
			case "D":
				// nome da funcao
				move(robotx,roboty+1);
				break;
			case "W":
				// nome da funcao
				move(robotx,roboty);
				break;
			default:
				System.out.println("Invalid choice.");
			}
		} while (!endgame);
		System.out.println("Congratz");
	}
}

